---
import VSection from "../components/VSection.astro";
import VSections from "../components/VSections.astro";
import MainLayout from "../layouts/MainLayout.astro";
import NoJS from "../components/NoJS.astro";
import Experience from "../components/Experience.astro";
import Project from "../components/Project.astro";
import { Icon } from "astro-icon/components";
import IconComp from "../components/IconComp.astro";
---

<style is:global>
    :root {
        --t-main: #f1edfd;
        --t-gold: #ffa285;
        --t-gold-accent: #ff8246;
        --t-main-accent: #e23bfb;
        --t-main-accent-light: #ea8df8;
        --t-dark: #b269b5;
        --between: #2b1c35;
        --bg-purp: #050207;
        --bg-purp-light: #100511;
        --bg-red: #10020d;
        --bg-bright: #16071b;
    }

    @supports selector(::-webkit-scrollbar) {
        html::-webkit-scrollbar {
            width: 10px;
        }
        html::-webkit-scrollbar-thumb {
            background-color: var(--t-dark);
            border-radius: 5px;
        }
        html::-webkit-scrollbar-track {
            background-color: var(--bg-purp-light);
        }
    }

    @supports not selector(::-webkit-scrollbar) {
        html {
            scrollbar-color: var(--t-dark) var(--bg-purp-light);
            scrollbar-width: thin;
        }
    }

    .dots {
        --dot-bg: var(--bg-purp);
        --dot-color: var(--between);
        --dot-size: 2px;
        --dot-space: 13px;
        background:
            linear-gradient(90deg, var(--dot-bg) calc(var(--dot-space) - var(--dot-size)), transparent 1%) center / var(--dot-space) var(--dot-space),
            linear-gradient(var(--dot-bg) calc(var(--dot-space) - var(--dot-size)), transparent 1%) center / var(--dot-space) var(--dot-space),
            var(--dot-color);
    }
    
    .top-mask {
        mask-image: radial-gradient(ellipse 100% 70% at 20% 0, #000 30%, transparent 100%);
    }

    .bottom-mask {
        mask-image: radial-gradient(ellipse 100% 70% at 20% 100%, #000 30%, transparent 100%);
    }

    .tech-icon span {
        visibility: hidden;
        opacity: 0;
        position: absolute;
        z-index: 1;
        transition: opacity 0.3s;
    }

    .tech-icon:hover span {
        visibility: visible;
        opacity: 1;
    }

    .fade-in {
        opacity: 1;
        transition: opacity 0.6s ease-out;
    }

    .fade-in-hidden {
        opacity: 0 !important;
    }

    @media (min-width: 1880px) {
        .project-grid {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    a {
        text-decoration: underline;
    }

    button {
        background-color: var(--bg-purp-light);
        border: 1px solid var(--t-dark);
        cursor: pointer;
        border-radius: 3px;
        height: fit-content;
        width: fit-content;
        padding: 0.5rem;
    }
</style>

<MainLayout title="James Nickoli" seoTitle="James Nickoli" seoDesc="Full Stack Software Developer, Game Dev, and Competitive Programmer">
    <div class="dots top-mask absolute w-full h-full -z-10"></div>
    <div class="relative">
        <NoJS>
            <div class="fixed top-0 left-0 w-full bg-bg-red text-t-gold p-4 text-center z-10 flex flex-row justify-between">
                <a href="#Top">Top</a>
                <a href="#Video-Cover-Letter">Video Cover Letter</a>
                <a href="#Work-Experience">Work Experience</a>
                <a href="#Programming-Experience">Programming Experience</a>
                <a href="#Projects">Projects</a>
                <a href="#Technologies">Technologies</a>
                <a href="#Contact">Contact</a>
            </div>
        </NoJS>
        <VSections>
            <VSection title="Top" noLine={true}>
                <div class="pt-20 pl-20 pb-52">
                    <div class="flex flex-col lg:flex-row gap-4">
                        <div class="lg:w-1/2">
                            <h1 class="text-5xl md:text-6xl bg-clip-text text-transparent bg-gradient-to-r from-t-gold-accent to-t-main-accent">James Nickoli</h1>
                            <h2 class="text-2xl md:text-3xl text-t-dark">Full Stack Developer</h2>
                            <div class="flex flex-row w-min mt-4 stroke-t-main-accent fill-t-main-accent text-t-main-accent">
                                <a href="https://github.com/rsninja722">
                                    <IconComp tech="github" custom={true} />
                                </a>
                                <a href="https://www.linkedin.com/in/james-nickoli/">
                                    <IconComp tech="linkedin" custom={true} />
                                </a>
                            </div>
                        </div>
                        <div class="h-[6rem] lg:w-1/2 flex items-end">
                            <h3 class="text-xl text-center text-t-dark">"Striving for deep understanding"</h3>
                        </div>
                    </div>
                </div>
            </VSection>
            <VSection title="Video Cover Letter">
                <div class="flex justify-center w-full">
                    <div class="w-full md:w-3/4 lg:w-2/3 xl:w-1/2 aspect-video">
                        <iframe class="w-full h-full" src="https://www.youtube.com/embed/M-M4yqryBi4?si=4mnvjXSJF-ChQoK5" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                    </div>
                </div>
            </VSection>
            <VSection title="Work Experience">
                <Experience imgLink="/assets/BVG_Logo.png" jobTitle="Full Stack Developer" company="Big Viking Games" date="May 2022 - Aug 2022" technologies={["php", "react", "java", "sql", "typescript", "docker", "firebase", "redis", "jira", "confluence", "slack"]} bulletPoints={["Increased game management efficiency by translating internal tools from PHP to React.", "Upgraded in-game social systems built using Java, SQL, and Typescript, enhancing play experience for thousands of live users.", "Strengthened player connections by discovering sources of long standing bugs via the debugging features of Docker containers.", "Collaborated in an Agile team using Jira, Confluence, and Slack to maintain live service games running on Firebase and Redis."]} />
            </VSection>
            <VSection title="Programming Experience">
                <Experience imgLink="/assets/MCP_Logo.png" jobTitle="Team Member" company="McMaster Competitive Programming Team" date="Oct 2021 - Aug 2023" technologies={["cpp", "python"]} bulletPoints={["Represented McMaster in the International Collegiate Programming Contest as a member of the junior team in 2021-2022, and placed 3rd out of 26 contestants in the 2022-2023 tryouts, qualifying as a member of the leading team."]} />
            </VSection>

            <VSection title="Projects">
                <div class="project-grid grid grid-cols-1 gap-4">
                    <Project
                        title="Missile Command 3D"
                        description={["Participated in Ubisoft's NEXT competition, using the provided API to create a 3D game engine in C++, implementing memory pools and an Entity Component System. ", "Benchmarked different custom implementations of vector/matrix math, using Python to visualize results. ", "Recreated the arcade game Missile Command with 3D graphics, and physics-based missiles"]}
                        images={[
                            { link: "/assets/P1_1.JPG", alt: "Missile Command 3D" },
                            { link: "/assets/P1_2.JPG", alt: "Using 3D camera to zoom in" },
                            { link: "/assets/P1_3.JPG", alt: "Analysis of different math vector implementations" }
                        ]}
                        link="https://github.com/rsninja722/UbisoftNext2024"
                        technologies={["cpp", "python"]}
                    />
                    <Project 
                        title="Esoteric JS Transpiler" 
                        description="As a programming exercise, created a transpiler that uses only the characters =_$(){}><~!%^&|*-+[];:?.,/ to encode any Javascript code" 
                        images={[{ link: "/assets/P2_1.JPG", alt: "Running transpiled code" }]} 
                        link={[
                            "https://github.com/rsninja722/JSFrick",
                            "https://rsninja.dev/JSFrick/"
                        ]} 
                        technologies={["javascript", "html", "css"]} 
                    />
                    <Project title="Multiplayer Mastermind" 
                        description={["Built a custom Java package for making GUI programs ( github.com/rsninja722/gamej ) using AWT and Swing, handling multi-threading, rendering that leverages the GPU, asset loading, camera systems, and mouse and keyboard input, also providing documentation and project templates. ", "Defined a communication protocol and wrote a server using Netty that can connect users with different clients. ", "Created a game client and a bot server to also allow individual play."]} 
                        images={[{ link: "/assets/P3_1.JPG", alt: "Two clients playing over the network" }]} 
                        link="https://github.com/rsninja722/MasterMind" 
                        technologies={["java"]} 
                    />
                    <Project title="Webassembly Platformer" 
                        description={["Created a platformer game with C++ using the Raylib game library for the Ludem Dare 51 game jam in 72 hours", "Compiled the game to run on the web with WebAssembly using the Emscripten toolchain"]} 
                        images={[
                            { link: "/assets/P4_1.JPG", alt: "Game running in the browser" }, 
                            { link: "/assets/P4_2.JPG", alt: "Game running as a native program" }
                        ]} 
                        link={[
                            "https://github.com/rsninja722/CabushsKookyClimb",
                            "https://rsninja.dev/CabushsKookyClimb/"
                        ]} 
                        technologies={["cpp", "web-assembly"]}
                    />
                </div>
            </VSection>
            <VSection title="Technologies">
                <div class="flex flex-col gap-4">
                    <div class="flex flex-row flex-wrap gap-2">
                        <p>Languages</p>
                        <div class="flex flex-row flex-wrap gap-2">
                            <IconComp tech="javascript" />
                            <IconComp tech="html" />
                            <IconComp tech="css" />
                            <IconComp tech="python" />
                            <IconComp tech="java" />
                            <IconComp tech="php" />
                            <IconComp tech="c" />
                            <IconComp tech="cpp" />
                            <IconComp tech="csharp" />
                            <IconComp tech="haskell" />
                            <IconComp tech="sql" />
                            <IconComp tech="rust" />
                        </div>
                    </div>
                    <div class="flex flex-row flex-wrap gap-2">
                        <p>Frameworks / Technologies</p>
                        <div class="flex flex-row flex-wrap gap-2">
                            <IconComp tech="astro" />
                            <IconComp tech="tailwind" />
                            <IconComp tech="react" />
                            <IconComp tech="nodejs" />
                            <IconComp tech="raylib" />
                            <IconComp tech="mariadb" />
                            <IconComp tech="mongodb" />
                            <IconComp tech="web-assembly" />
                            <IconComp tech="docker" />
                            <IconComp tech="firebase" />
                        </div>
                    </div>
                    <div class="flex flex-row flex-wrap gap-2">
                        <p>Tools</p>
                        <div class="flex flex-row flex-wrap gap-2">
                            <IconComp tech="git" />
                            <IconComp tech="linux" />
                            <IconComp tech="jira" />
                            <IconComp tech="confluence" />
                            <IconComp tech="slack" />
                        </div>
                    </div>
                </div>
            </VSection>
            <VSection title="Contact">
                <div class="flex justify-between mx-4 lg:mx-52 flex-col lg:flex-row gap-4">
                    <div class="flex flex-row justify-center items-center gap-2">
                        <Icon name="github" size="32" />
                        <a class="text-t-main-accent break-words" href="https://github.com/rsninja722">github.com/rsninja722</a>
                    </div>
                    <div class="flex flex-row justify-center items-center gap-2">
                        <Icon name="phone" size="32" />
                        <a class="text-t-main-accent break-words" href="sms:+12262685095">226-268-5095</a>
                    </div>
                    <div class="flex flex-row justify-center items-center gap-2">
                        <Icon name="email" size="32" />
                        <a class="text-t-main-accent break-words" href="mailto:contact@jamesnicko.li">contact@jamesnicko.li</a>
                    </div>
                </div>
            </VSection>
        </VSections>
        <div class="dots bottom-mask absolute bottom-0 w-full h-screen -z-10"></div>
    </div>
</MainLayout>

<script>
    const FadeInterval = 150;
    // fade in on view logic
    document.addEventListener("DOMContentLoaded", () => {
        const fadeIns: NodeListOf<HTMLElement> = document.querySelectorAll(".fade-in");
        let fadeQueue: HTMLElement[] = [];

        // add hiding class with js in case user has js disabled
        fadeIns.forEach((element) => {
            element.classList.add("fade-in-hidden");
        });

        function processFadeQueue() {
            fadeQueue.shift()?.classList.remove("fade-in-hidden");
            if (fadeQueue.length > 0) {
                setTimeout(processFadeQueue, FadeInterval - Math.max(0, Math.min(150, (fadeQueue.length - 5) * 5)));
            }
        }

        const observer = new IntersectionObserver(
            (entries) => {
                let queueUpdate = false;
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        fadeQueue.push(entry.target as HTMLElement);
                        queueUpdate = true;
                    }
                });
                if (queueUpdate) {
                    requestAnimationFrame(processFadeQueue);
                }
            },
            { threshold: 0.1 }
        );

        fadeIns.forEach((element) => {
            observer.observe(element);
        });

        // Handle elements visible at the start
        // fadeIns.forEach((element) => {
        //     const rect = element.getBoundingClientRect();
        //     if (rect.top >= 0 && rect.bottom <= window.innerHeight) {
        //         element.classList.remove("fade-in-hidden");
        //     }
        // });
    });
</script>
